name: Deploy to Netlify

on:
  workflow_dispatch:
    inputs:
      repository_url:
        description: 'GitHub Repository URL'
        required: true
      netlify_auth_token:
        description: 'Netlify Auth Token'
        required: true
      netlify_site_id:
        description: 'Netlify Site ID'
        required: true
      github_token:
        description: 'GitHub Token'
        required: true
      app_id:
        description: 'App ID'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repository_url }}
          token: ${{ github.event.inputs.github_token }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: |
          if ! pnpm run build; then
            echo "Build failed"
            exit 1
          fi
          if [ ! -d "dist" ]; then
            echo "Error: dist directory not found"
            exit 1
          fi

      - name: Install Netlify CLI
        run: |
          # Install Netlify CLI globally and ensure it's in PATH
          npm install -g netlify-cli@22.3.0
          # Add npm global bin to PATH
          echo "$(npm config get prefix)/bin" >> $GITHUB_PATH
          # Verify installation
          netlify --version

      - name: Deploy to Netlify
        id: deploy
        env:
          NETLIFY_AUTH_TOKEN: ${{ github.event.inputs.netlify_auth_token }}
          NETLIFY_SITE_ID: ${{ github.event.inputs.netlify_site_id }}
        run: |
          echo "Deploying to Netlify with Site ID: ${{ github.event.inputs.netlify_site_id }}"
          netlify deploy --prod --dir=dist --site ${{ github.event.inputs.netlify_site_id }} || { echo "Deploy failed"; exit 1; }

      - name: Send notification to Genfly
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ] && [ "${{ steps.deploy.outcome }}" == "success" ]; then
            STATUS="completed"
          else
            STATUS="failed"
          fi
          curl -X POST https://www.genfly.dev/api/send \
            -H "Content-Type: application/json" \
            -d "{\"clientId\": \"${{ github.event.inputs.app_id }}\", \"status\": \"$STATUS\"}"