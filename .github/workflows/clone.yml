name: Clone, Push, and Deploy to Fly

on:
  workflow_dispatch:
    inputs:
      source_repo_url:
        description: "URL of the source GitHub repository to clone"
        required: true
        default: "https://github.com/fly-apps/hello-fly.git"
      new_repo_name:
        description: "Name of the new GitHub repository to create"
        required: true
        default: "my-new-repo"
      github_token:
        description: "GitHub Personal Access Token with repo permissions"
        required: true
      fly_api_token:
        description: "Fly.io API Token for deployment"
        required: true
      fly_app_name:
        description: "Name of the Fly.io app to deploy to"
        required: true
        default: "my-fly-app"

jobs:
  clone-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout workflow repository
        uses: actions/checkout@v2  # 更新到最新版本
      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
        with:
          version: 0.0.462  # 固定版本，与之前一致
      - name: Clone source repository
        run: |
          echo "Cloning from: ${{ github.event.inputs.source_repo_url }}"
          git clone ${{ github.event.inputs.source_repo_url }} /tmp/source-repo
          cd /tmp/source-repo
          DEFAULT_BRANCH=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
          echo "DEFAULT_BRANCH=$DEFAULT_BRANCH" >> $GITHUB_ENV
          echo "Cloned repository contents:"
          ls -la /tmp/source-repo
      - name: Create new GitHub repository
        run: |
          echo "Creating new repository: ${{ github.event.inputs.new_repo_name }}"
          RESPONSE=$(curl -X POST \
            -H "Authorization: token ${{ github.event.inputs.github_token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/user/repos \
            -d "{\"name\":\"${{ github.event.inputs.new_repo_name }}\",\"private\":false}" \
            -w "%{http_code}" -s -o response.json)
          echo "HTTP Status: $RESPONSE"
          echo "API Response:"
          cat response.json
          if [ "$RESPONSE" -ne 201 ]; then
            echo "Failed to create repository. Exiting."
            exit 1
          fi
      - name: Configure Git and push to new repo
        run: |
          cd /tmp/source-repo
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"
          REMOTE_URL=https://x-access-token:${{ github.event.inputs.github_token }}@github.com/${{ github.repository_owner }}/${{ github.event.inputs.new_repo_name }}.git
          echo "Pushing to: $REMOTE_URL"
          git remote add new-origin "$REMOTE_URL"
          git push new-origin ${{ env.DEFAULT_BRANCH }} || {
            echo "Push failed. Remote branches:"
            git ls-remote new-origin
            exit 1
          }
      - name: Deploy to Fly.io
        env:
          FLY_API_TOKEN: ${{ github.event.inputs.fly_api_token }}
        run: |
          cd /tmp/source-repo
          echo "Deploying to Fly.io app: ${{ github.event.inputs.fly_app_name }}"
          flyctl deploy --app ${{ github.event.inputs.fly_app_name }} --remote-only || {
            echo "Deployment failed. Fly.io status:"
            flyctl status --app ${{ github.event.inputs.fly_app_name }}
            exit 1
          }
          echo "Deployment successful"
      - name: Verify push and deployment
        run: |
          echo "Pushed to: https://github.com/${{ github.repository_owner }}/${{ github.event.inputs.new_repo_name }}"
          echo "Deployed to: https://${{ github.event.inputs.fly_app_name }}.fly.dev"